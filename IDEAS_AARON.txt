#!/bin/bash

# Verifica que se haya proporcionado un archivo YAML de entrada como argumento
if [ $# -eq 0 ]; then
    echo "Uso: $0 archivo_de_entrada.yml"
    exit 1
fi

input_file="$1"

# Verifica que el archivo de entrada exista
if [ ! -f "$input_file" ]; then
    echo "Error: El archivo $input_file no existe."
    exit 1
fi

# Lee el archivo YAML de entrada
config=$(awk '/^config:$/,/^---$/ { print }' "$input_file" | sed '1d;$d')

# Extrae los valores necesarios del archivo de entrada
project=$(echo "$config" | awk '/^\s+project:/ { print $2 }')
timestamp=$(echo "$config" | awk '/^\s+timestamp:/ { print $2 }')
jobs=$(echo "$config" | awk '/^\s+jobs:/,/^$/' | sed '1d;$d')

# Procesa cada job en la lista de jobs
while IFS= read -r line; do
    if [[ "$line" =~ ^\s+name: ]]; then
        job_name=$(echo "$line" | awk '{ print $2 }')
    elif [[ "$line" =~ ^\s+version: ]]; then
        version=$(echo "$line" | awk '{ print $2 }')
    elif [[ "$line" =~ ^\s+jira_id: ]]; then
        jira_id=$(echo "$line" | awk '{ print $2 }')
        # Genera el archivo YAML de salida para este job
        output_file="${job_name}_${timestamp}.yml"
        cat <<EOF > "$output_file"
project_name: $project
job_name: $job_name
fid: $jira_id
version: $version
EOF
        echo "Archivo generado: $output_file"
    fi
done <<< "$jobs"
